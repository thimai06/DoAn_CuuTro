@model Models.EF.Pesonal

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section header{
    <div style="display:flex;">
        <i class="fa fa-user" style="font-size:30px; margin-top:20px;margin-left:10px"> </i>
        <h3>&nbsp;Tạo mới người dùng</h3>
    </div>
}
@using (Html.BeginForm("Create", "Personal"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.ActionLink("Back to List", "Index", "Personal", new { @class = "btn btn-success" })
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class=" control-label col-md-2"> Tên đăng nhập  </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID_user, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID_user, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class=" control-label col-md-2"> Mật khẩu    </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class=" control-label col-md-2"> Tên người dùng    </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Personal_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Personal_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class=" control-label col-md-2"> Chứng minh thư    </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID_card, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID_card, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class=" control-label col-md-2"> Địa chỉ    </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class=" control-label col-md-2"> Giới tính    </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class=" control-label col-md-2">Số điện thoại   </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>CKEDITOR.replace('txt');</script>